# 容器 配置
# 开发环境配置
server:
  # 服务器的HTTP端口，默认为80
  port: 80
  # 邮件头的最大大小。
  max-http-header-size: 8192
  servlet:
    # 应用的访问路径
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    #当所有可能的请求处理线程都在使用时，传入连接请求的最大队列长
    accept-count: 200
    # tomcat最大线程数，默认为200
    max-threads: 800
    # Tomcat启动初始化的线程数，默认值25
    min-spare-threads: 30
    #最大并发数默认是10000
    max-connections: 5000
    #Tomcat 基目录。如果未指定，则使用临时目录。#手动的将临时文件夹设置为自定义的文件夹，就不会被Linux删除了
    basedir: /root/tomcattemp
    #HTTP 帖子内容的最大大小。当值为-1时，默认值为大小无限制
    max-http-post-size: 2048
  #ssl:
    #enabled: true
    #key-store: classpath:1791425.pfx
    #key-store-password: y15F56bX
    #keyStoreType: PKCS12

spring:
  datasource:
    # 数据库访问配置, 使用druid数据源 59.110.241.188
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driverClassName: com.mysql.jdbc.Driver
      url: jdbc:mysql://39.104.228.107:3306/niuhaoone?useUnicode=true&characterEncoding=utf8
      #url: jdbc:mysql://localhost:3306/niuhaoone?useUnicode=true&characterEncoding=utf8
      username:  root
      password:  basewin2019
      #username: basewin
      #password: basewin
      # 初始化时建立物理连接的个数
      initial-size: 1
      # 最小链接池数量
      min-idle: 5
      # 最大连接池数量（缺省值：8）
      max-active: 50
      # 连接等待超时时间
      max-wait: 30000
      # 配置检测可以关闭的空闲连接间隔时间
      time-between-eviction-runs-millis: 60000
      # 配置连接在池中的最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: select '1' from dual
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小, MySQL下建议关闭
      pool-prepared-statements: false
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙 # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
      filters: stat, wall
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: cc.mrbird.scapp.service.*,cc.mrbird.job.service.*,cc.mrbird.system.service.*

      # WebStatFilter配置
      web-stat-filter:
       # 是否启用WebStatFilter
        enabled: true
        #配置profileEnable能够监控单个url调用的sql列表
        profile-enable: true
        # 添加过滤规则
        url-pattern: /*
        #忽略过滤的格式
        exclusions: /*.jsp,/*.js,/*.gif,/*.jpg,/*.png,/*.css,/*.ico,/druid/*,/actuator/*,/swagger-resources/**,/webjars/**,/v2/**,/swagger-ui.html/**
        #session统计功能
        session-stat-enable: true
        # 监控最大session数，默认是1000
        session-stat-max-count: 1000
        # 使druid当前session的用户是谁，session_user_key是你保存到session中的sessionName
        principalSessionName: session_user_key
        # 使druid只当当前的user是谁,cookie_user_key是你保存在cookie中的cookieName
        principalCookieName: cookie_user_key
      # StatViewServlet配置 
      stat-view-servlet:
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台
        login-username: niuhao
        login-password: niuhao
        # IP白名单
        # allow: 127.0.0.1
        # IP黑名单（共同存在时，deny优先于allow）
        # deny: 192.168.1.218

      # 配置StatFilter,是否启用StatFilter默认值true
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
          db-type: mysql
          enabled: true
      # 是否启用WallFilter, 默认值true
        wall:
          enabled: true
          db-type: mysql
          config:
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            # 是否允许非以上基本语句的其他语句, 缺省关闭, 通过这个选项就能够屏蔽DDL.
            none-base-statement-allow: false
            # 检查UPDATE语句是否无where条件, 这是有风险的, 但不是SQL注入类型的风险
            update-where-none-check: true
            # 是否允许调用Connection.getMetadata方法, 这个方法调用会暴露数据库的表信息
            metadata-allow: true
          # 对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          # 对被认为是攻击的SQL抛出SQLExcepton
          throw-exception: true

  redis:
    # Redis数据库索引（默认为0）
    database: 13
    # Redis服务器地址 59.110.241.188
    host: 192.168.10.103
    #host: 39.104.228.107
    #host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis 密码
    password:
    jedis:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 8
        # 连接池中的最大空闲连接
        max-idle: 500
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 2000
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 10000
    # 连接超时时间（毫秒）
    timeout: 0

 #发送邮件配置
  mail:
    host: smtp.qq.com
    username: 1353710858@qq.com #307523005@qq.com
    password: epckclfjogcwgfah #dzagtxicxzurbgia # 要通过申请开通（进入qq邮箱-》设置-》账户-》POP3服务：开启POP3/SMTP服务）
    port: 465
    protocol: smtp
    default-encoding: utf-8
    properties:
          mail:
            smtp:
              ssl:
                enable: true
#niuhaoone 配置
niuhaoone:
  ip2regionUrl: E:\idea\niuhao-version-01\src\main\resources\ip2region\ip2region.db